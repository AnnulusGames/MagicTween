using Microsoft.CodeAnalysis;

namespace MagicTween.Generator
{
    [Generator]
    public sealed class RegisterTweenTypeGenerator : ISourceGenerator
    {
        public void Execute(GeneratorExecutionContext context)
        {
            var compilation = context.Compilation;
            var attributes = compilation.Assembly.GetAttributes();
            foreach (var attribute in attributes)
            {
                var attributeClassName = attribute.AttributeClass.Name;

                if (attributeClassName == "MagicTween.RegisterTweenTypeAttribute" ||
                    attributeClassName == "MagicTween.RegisterTweenType" ||
                    attributeClassName == "RegisterTweenType" ||
                    attributeClassName == "RegisterTweenTypeAttribute")
                {
                    var valueType = (INamedTypeSymbol)attribute.ConstructorArguments[0].Value;
                    var optionsType = (INamedTypeSymbol)attribute.ConstructorArguments[1].Value;
                    var pluginType = (INamedTypeSymbol)attribute.ConstructorArguments[2].Value;

                    var valueTypeFullName = valueType.Name;
                    if (!valueType.ContainingNamespace.IsGlobalNamespace) valueTypeFullName = valueType.ContainingNamespace + "." + valueTypeFullName;
                    var optionsTypeFullName = optionsType.Name;
                    if (!optionsType.ContainingNamespace.IsGlobalNamespace) optionsTypeFullName = optionsType.ContainingNamespace + "." + optionsTypeFullName;
                    var pluginTypeFullName = pluginType.Name;
                    if (!pluginType.ContainingNamespace.IsGlobalNamespace) pluginTypeFullName = pluginType.ContainingNamespace + "." + pluginTypeFullName;

                    context.AddSource($"__{valueTypeFullName}_tween_type.g.cs",
$@"
// <auto-generated/>

using Unity.Burst;
using Unity.Entities;
using Unity.Mathematics;
using MagicTween.Core.Components;
using MagicTween.Core;
using MagicTween.Plugins;
using MagicTween;

[assembly: RegisterGenericComponentType(typeof(TweenValue<{valueTypeFullName}>))]
[assembly: RegisterGenericComponentType(typeof(TweenStartValue<{valueTypeFullName}>))]
[assembly: RegisterGenericComponentType(typeof(TweenEndValue<{valueTypeFullName}>))]
[assembly: RegisterGenericComponentType(typeof(TweenOptions<{optionsTypeFullName}>))]
[assembly: RegisterGenericComponentType(typeof(TweenDelegates<{valueTypeFullName}>))]
[assembly: RegisterGenericComponentType(typeof(TweenDelegatesNoAlloc<{valueTypeFullName}>))]

namespace MagicTween.Generated{(valueType.ContainingNamespace.IsGlobalNamespace ? string.Empty : valueType.ContainingNamespace.Name)}
{{
    partial class {valueType.Name}TweenSystem : StandardTweenSystemBase<{valueTypeFullName}, {optionsTypeFullName}, {pluginTypeFullName}> {{ }}
    partial class {valueType.Name}TweenDelegateTranslationSystem : TweenDelegateTranslationSystemBase<{valueTypeFullName}, {optionsTypeFullName}, {pluginTypeFullName}> {{ }}
}}
");
                }
            }
        }

        public void Initialize(GeneratorInitializationContext context) { }
    }
}

